{"version":3,"sources":["components/buttons/rainbow/RainbowButton.jsx","Home/Home.jsx","Game/pages/components/Challenge.jsx","Game/pages/SecretCode.jsx","Game/pages/Parkour.jsx","Game/pages/Cotton.jsx","Game/pages/InvisibleCode.jsx","Game/pages/Spaghetti.jsx","Game/config.js","Game/pages/EndGame.jsx","Game/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Rainbow","rainbowType","children","props","className","Home","onStart","RainbowButton","onClick","numbers","Array","keys","map","x","Challenge","code","onSuccess","useState","errors","setErrors","success","setSuccess","length","type","console","log","setTimeout","verify","indexOf","SecretCode","Cotton","InvisibleCode","Spaghetti","gameConfig","split","challenges","Parkour","EndGame","Game","step","setStep","Component","config","App","started","setStarted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c3cc5c5.chunk.js","sourcesContent":["import './rainbow-button.css'\n\nconst Rainbow = ({rainbowType = 1, children, ...props}) => {\n    return (<a className={`rainbow-button rainbow-${rainbowType}`} {...props}>\n        {children}\n    </a>)\n}\n\nexport default Rainbow\n","import RainbowButton from \"../components/buttons/rainbow/RainbowButton\";\n\nconst Home = ({onStart}) => {\n    return (\n        <div>\n            <h2>🏠 🏠 Bienvenue dans la mission cabane 🏠 🏠</h2>\n            <p>\n                La cabane est actuellement 🔒🔒🔒 fermée 🔒🔒🔒 ! <br/>\n                <strong>PERSONNE</strong> ne peut rentrer !!! Oh la la 😢 😢 😢. <br/>\n                La pyjama party ne pourra pas avoir lieu sans trouver la 🔑clé 🔑. \n            </p>\n            <p>\n                <strong>Votre mission</strong> :\n                <ul className=\"list-no-style\">\n                    <li>➡ Réussir chaque défi pour trouver le code secret</li>\n                    <li>➡ Grace à l'énigme, trouver la clef</li>\n                    <li>➡ S'amuser, être une licorne 🦄, un panda 🐼, un lapin 🐇</li>\n                </ul>\n            </p>\n            <h3>💙💙💙💙💙💙💙 Etes-vous prêtes ??? 💙💙💙💙💙💙💙</h3>\n            <RainbowButton onClick={onStart}>Commencer !!!</RainbowButton>\n        </div>\n    )\n}\n\nexport default Home;\n","import {useState} from \"react\";\nimport './challenge.css'\nimport Confetti from \"react-confetti\";\n\nconst numbers = [...Array(10).keys()].map(x => \"\" + x);\n\nconst Challenge = ({code, onSuccess, children}) => {\n    const [errors, setErrors] = useState([]);\n    const [success, setSuccess] = useState(false);\n    const verify = (x) => {\n        console.log(errors);\n        if (x === code) {\n            setSuccess(true);\n            setTimeout(() => onSuccess(), 5000);\n        } else {\n            setErrors([...errors, x]);\n        }\n    }\n    return (<div className=\"challenge\">\n            <div className=\"challenge-body\">\n                {children}\n            </div>\n            {\n                success && <Confetti/>\n            }\n            <div className=\"challenge-answer\">\n                {errors.length > 0 && <p className=\"challenge-error\">Erreur ! Ce n'est pas le bon code !</p>}\n                <div className=\"challenge-numbers\">\n                    {numbers.map(x => (\n                        <a\n                            key={x}\n                            type=\"button\"\n                            onClick={() => verify(x)}\n                            className={`challenge-number ${errors.indexOf(x) > -1 ? \"error\" : \"\"}`}\n                        >\n                            {x}\n                        </a>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Challenge;\n","import Challenge from \"./components/Challenge\";\n\nconst SecretCode = ({code, onSuccess}) => {\n    return (\n        <Challenge code={code} onSuccess={onSuccess}>\n            Bonjour les filles,\n            <p>\n                Une soirée pyjama, c'est l'occasion de se dire des secrets, vous allez devoir montrer que vous savez être discrètes !\n            </p>\n            <p>\n                Des lettres donnant le premier code ont été cachées dans l'appartement.<br/>\n                Vous possédez chacune une feuille avec un code secret à résoudre pour trouver les différentes\n                cachettes<br/>\n                <strong>Dépéchez vous !</strong><br/>\n            </p>\n            <h2>Le code est :</h2>\n        </Challenge>\n    )\n}\n\nexport default SecretCode;\n","import Challenge from \"./components/Challenge\";\n\nconst SecretCode = ({code, onSuccess}) => {\n    return (\n        <Challenge code={code} onSuccess={onSuccess}>\n            <h2>Bravo les chamallows ! 🍬🍭 </h2>\n            <p>\n                Ok pour les secrets, on est bon ! <br/>\n                Mais une cabane, c'est <strong>fragile</strong>, il faut savoir se déplacer discrètement, telle une petite souris <span className=\"bigmoji\">🐁</span>.<br/>\n                Pour cette seconde épreuve, vous n'aurez pas besoin de votre cerveau, mais de toute votre concentration.<br/>\n                Effectuez le parcours sans faire tomber votre \"oeuf\" <span className=\"bigmoji\">🥚</span> et vous obtiendrez le second code.<br/>\n                Ninjaaaaaa <span className=\"bigmoji\">🥋</span>\n            </p>\n        </Challenge>\n    )\n}\n\nexport default SecretCode;\n","import Challenge from \"./components/Challenge\";\n\nconst Cotton = ({code, onSuccess}) => {\n    return (\n        <Challenge code={code} onSuccess={onSuccess}>\n            <p>\n                Très bien les petits dragons <span className=\"bigmoji\">🐉</span><br/>\n                Connaissez-vous l'expression \"<strong>Le ridicule ne tue pas</strong>\" ?<br/>\n                Et bien j'espère pour vous, parce que pour découvrir le prochain code, on va rigoler !<br/>\n                L'une après l'autre, amenez les cotons de la table à la poubelle et le code se dévoilera !<br/>\n                Ca va être moelleuuuuux <span className=\"bigmoji\">🐑</span>\n            </p>\n        </Challenge>\n    )\n}\n\nexport default Cotton;\n","import Challenge from \"./components/Challenge\";\n\nconst InvisibleCode = ({code, onSuccess}) => {\n    return (\n        <Challenge code={code} onSuccess={onSuccess}>\n            <p>\n                Avez-vous peur du noir ? <br/>\n                Le prochain code est caché dans la chambre, mais il n'est visible que dans le noir !<br/>\n                Utilisez vos stylos de détective <span className=\"bigmoji\">🔦</span>, 5 lettres sont à trouver, pour obtenir le code\n            </p>\n        </Challenge>\n    )\n}\n\nexport default InvisibleCode;\n","import Challenge from \"./components/Challenge\";\n\nconst Spaghetti = ({code, onSuccess}) => {\n    return (\n        <Challenge code={code} onSuccess={onSuccess}>\n            <p>\n                Vous y êtes presque !<br/>\n                Il ne reste plus qu'un défi à remplir. <br/>\n                Dans une cabane, on est une famille, le travail d'équipe sera donc important !\n            </p>\n        </Challenge>\n    )\n}\n\nexport default Spaghetti;\n","import SecretCode from \"./pages/SecretCode\";\nimport Parkour from \"./pages/Parkour\";\nimport Cotton from \"./pages/Cotton\";\nimport InvisibleCode from \"./pages/InvisibleCode\";\nimport Spaghetti from \"./pages/Spaghetti\";\n\nconst gameConfig = {\n    code: \"85247\".split(\"\"),\n    challenges: [SecretCode, Parkour, Cotton, InvisibleCode, Spaghetti]\n}\n\nexport default gameConfig;\n","import './pyro.css'\n\nconst EndGame = () => {\n    return (\n        <div>\n            <div className=\"pyro\">\n                <div className=\"pyro-before\"></div>\n                <div className=\"pyro-after\"></div>\n            </div>\n            <h2>Felicitations !</h2>\n            <p>\n                Bravo vous avez trouvé le bon code mes cocottes <span className=\"bigmoji\"> 🐔🐤</span> !\n            </p>\n            <p>\n                Mais il vous reste une dernière <strong>ENIGME</strong> !\n            </p>\n            <p>La clef de la cabane est cachée dans le salon...elle <strong>bloque</strong> une porte</p>\n        </div>\n    )\n}\n\nexport default EndGame;\n","import {useState} from \"react\";\nimport config from \"./config\";\nimport EndGame from \"./pages/EndGame\";\n\nconst Game = () => {\n    const [step, setStep] = useState(0);\n    const Component = config.challenges[step];\n    return (<div className=\"game\">\n        {step !== config.code.length && Component && <Component code={config.code[step]} onSuccess={() => setStep(step + 1)}/>}\n        {step === config.code.length && <EndGame/>}\n    </div>)\n}\n\nexport default Game\n","import './App.css';\nimport {useState} from \"react\";\nimport Home from \"./Home/Home\";\nimport Game from \"./Game/Game\"\n\nfunction App() {\n    const [started, setStarted] = useState(false);\n    return (<div className=\"App\">\n        <div className=\"header\">\n            <h1><span className=\"rainbow-text\">Pyjama party de </span> 🎧 <span className=\"rainbow-text-name\">Louise</span> 🎧</h1>\n        </div>\n        <main>\n            {!started && <Home onStart={() => setStarted(true)}/>}\n            {started && <Game/>}\n        </main>\n    </div>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}