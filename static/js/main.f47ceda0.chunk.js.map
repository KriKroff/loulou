{"version":3,"sources":["components/buttons/rainbow/RainbowButton.jsx","Home/Home.jsx","Game/pages/components/Challenge.jsx","Game/pages/SecretCode.jsx","Game/pages/Parkour.jsx","Game/config.js","Game/pages/EndGame.jsx","Game/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Rainbow","rainbowType","children","props","className","Home","onStart","RainbowButton","onClick","numbers","Array","keys","map","x","Challenge","code","onSuccess","useState","errors","setErrors","success","setSuccess","length","type","console","log","setTimeout","verify","indexOf","SecretCode","gameConfig","split","challenges","Parkour","EndGame","Game","step","setStep","Component","config","App","started","setStarted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f47ceda0.chunk.js","sourcesContent":["import './rainbow-button.css'\n\nconst Rainbow = ({rainbowType = 1, children, ...props}) => {\n    return (<a className={`rainbow-button rainbow-${rainbowType}`} {...props}>\n        {children}\n    </a>)\n}\n\nexport default Rainbow\n","import RainbowButton from \"../components/buttons/rainbow/RainbowButton\";\n\nconst Home = ({onStart}) => {\n    return (\n        <div>\n            <h2>Bienvenue dans la mission cabane</h2>\n            <p>\n                Le but de cette mission sera de trouver plusieurs <strong>chiffres</strong> qui vous permettront de trouver le code de Pouet pouet.\n            </p>\n            <RainbowButton onClick={onStart}>Commencer</RainbowButton>\n        </div>\n    )\n}\n\nexport default Home;\n","import {useState} from \"react\";\nimport './challenge.css'\nimport Confetti from \"react-confetti\";\n\nconst numbers = [...Array(10).keys()].map(x => \"\" + x);\n\nconst Challenge = ({code, onSuccess, children}) => {\n    const [errors, setErrors] = useState([]);\n    const [success, setSuccess] = useState(false);\n    const verify = (x) => {\n        console.log(errors);\n        if (x === code) {\n            setSuccess(true);\n            setTimeout(() => onSuccess(), 5000);\n        } else {\n            setErrors([...errors, x]);\n        }\n    }\n    return (<div className=\"challenge\">\n            <div className=\"challenge-body\">\n                {children}\n            </div>\n            {\n                success && <Confetti/>\n            }\n            <div className=\"challenge-answer\">\n                {errors.length > 0 && <p className=\"challenge-error\">Erreur ! Ce n'est pas le bon code !</p>}\n                <div className=\"challenge-numbers\">\n                    {numbers.map(x => (\n                        <a\n                            key={x}\n                            type=\"button\"\n                            onClick={() => verify(x)}\n                            className={`challenge-number ${errors.indexOf(x) > -1 ? \"error\" : \"\"}`}\n                        >\n                            {x}\n                        </a>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Challenge;\n","import Challenge from \"./components/Challenge\";\n\nconst SecretCode = ({code, onSuccess}) => {\n    return (\n        <Challenge code={code} onSuccess={onSuccess}>\n            Bonjour mes pouets\n        </Challenge>\n    )\n}\n\nexport default SecretCode;\n","import Challenge from \"./components/Challenge\";\n\nconst SecretCode = ({code, onSuccess}) => {\n    return (\n        <Challenge code={code} onSuccess={onSuccess}>\n            Parkour\n        </Challenge>\n    )\n}\n\nexport default SecretCode;\n","import SecretCode from \"./pages/SecretCode\";\nimport Parkour from \"./pages/Parkour\";\n\nconst gameConfig = {\n    code: \"19\".split(\"\"),\n    challenges: [SecretCode, Parkour]\n}\n\nexport default gameConfig;\n","import './pyro.css'\n\nconst EndGame = () => {\n    return (\n        <div>\n            <div className=\"pyro\">\n                <div className=\"pyro-before\"></div>\n                <div className=\"pyro-after\"></div>\n            </div>\n            <h2>Felicitation !</h2>\n            <p>\n                Le but de cette mission sera de trouver plusieurs <strong>chiffres</strong> qui vous permettront de\n                trouver le code de Pouet pouet.\n            </p>\n        </div>\n    )\n}\n\nexport default EndGame;\n","import {useState} from \"react\";\nimport config from \"./config\";\nimport EndGame from \"./pages/EndGame\";\n\nconst Game = () => {\n    const [step, setStep] = useState(0);\n    const Component = config.challenges[step];\n    return (<div className=\"game\">\n        {step !== config.code.length && Component && <Component code={config.code[step]} onSuccess={() => setStep(step + 1)}/>}\n        {step === config.code.length && <EndGame/>}\n    </div>)\n}\n\nexport default Game\n","import './App.css';\nimport {useState} from \"react\";\nimport Home from \"./Home/Home\";\nimport Game from \"./Game/Game\"\n\nfunction App() {\n    const [started, setStarted] = useState(false);\n    return (<div className=\"App\">\n        {!started && <Home onStart={() => setStarted(true)}/>}\n        {started && <Game/>}\n    </div>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}